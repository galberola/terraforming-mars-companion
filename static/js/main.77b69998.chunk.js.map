{"version":3,"sources":["components/resource/resource-input.tsx","components/resource/resource-item.tsx","components/resource/resources-tab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputAction","ResourceInput","numberInputRef","action","num","this","tmpNum","parseInt","value","isNaN","SUB","console","log","props","onAddQuantity","className","isProduction","type","onClick","e","amount","ADD","ref","i","Component","RenderItem","productionInput","hideProduction","undefined","production","quantity","onProductionModified","name","alt","src","icon","width","height","onAmountModified","ResourcesTab","itemsRenderer","state","generation","resources","getImageUrl","resource","process","setState","Object","keys","forEach","key","itemStyle","onTriggerProductionPhase","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77b69998.chunk.js","sourcesContent":["import React, {Component, useRef} from 'react';\n\nexport interface ResourceInputProps {\n  amount: number,\n  isProduction?: boolean,\n  onAddQuantity: (amount: number) => void,\n}\n\nenum InputAction {\n  ADD,\n  SUB,\n}\n\nexport default class ResourceInput extends Component<ResourceInputProps> {\n  private numberInputRef: HTMLInputElement | null = null;\n\n  onClick(action: InputAction) {\n    let num: number = 1;\n\n    if (this.numberInputRef) {\n      let tmpNum = parseInt(this.numberInputRef.value);\n      this.numberInputRef.value = \"\";\n\n      if (isNaN(tmpNum) == false) {\n        num = tmpNum;\n      }\n    }\n\n    if (action == InputAction.SUB) {\n      num = -num;\n    }\n\n    console.log(`Attribute Qty [${num}]`)\n\n    this.props.onAddQuantity(num);\n  }\n\n  render() {\n    let className = \"resource-input\";\n    if (this.props.isProduction) {\n      className += \" resource-input-production\";\n    }\n\n    if (this.props.isProduction === true) {\n      return <div className={className}>\n        <div className=\"row no-gutters\">\n        <p className=\"col-1 col-sm-1\"></p>\n        <input type=\"button\" className=\"btn btn-danger col-2 col-sm-2\" onClick={e => this.onClick(InputAction.SUB)} value=\"-\" />\n        <p className=\"col-1 col-sm-1\"></p>\n        <p className=\"value col-4 col-sm-4 align-self-center\">{this.props.amount}</p>\n        <p className=\"col-1 col-sm-1\"></p>\n        <input type=\"button\" className=\"btn btn-success col-2 col-sm-2\" onClick={e => this.onClick(InputAction.ADD)} value=\"+\" />\n        <p className=\"col-1 col-sm-1\"></p>\n      </div>\n      </div>\n    }\n\n    return <div className={className}>\n      <p className=\"value\">{this.props.amount}</p>\n      <div className=\"row no-gutters\">\n        <p className=\"col-1 col-sm-1\"></p>\n        <input type=\"button\" className=\"btn btn-danger col-2 col-sm-2\" onClick={e => this.onClick(InputAction.SUB)} value=\"-\" />\n        <p className=\"col-1 col-sm-1\"></p>\n        <input type=\"number\" className=\"col-4 col-sm-4 align-self-center\" ref={i => this.numberInputRef = i} />\n        <p className=\"col-1 col-sm-1\"></p>\n        <input type=\"button\" className=\"btn btn-success col-2 col-sm-2\" onClick={e => this.onClick(InputAction.ADD)} value=\"+\" />\n        <p className=\"col-1 col-sm-1\"></p>\n      </div>\n    </div>\n  }\n}\n","import React, { Component } from 'react';\nimport ResourceInput from './resource-input';\n\nexport interface ResourceItemProps {\n  name: string,\n  icon: string,\n  amount: number,\n  production: number,\n  onAmountModified: (name: string, quantity: number) => void,\n  onProductionModified: (name: string, quantity: number) => void,\n  className?: string,\n  hideProduction?: boolean,\n}\n\nexport default function RenderItem(props: ResourceItemProps) {\n  let productionInput = props.hideProduction\n    ? undefined\n    : <ResourceInput\n    amount={props.production}\n    isProduction={true}\n    onAddQuantity={quantity => props.onProductionModified(props.name, quantity)} />;\n\n  return <div className={\"resource-item \" + props.className}>\n      <img alt={props.name} src={props.icon} width=\"32\" height=\"32\" />\n      <ResourceInput amount={props.amount} onAddQuantity={quantity => props.onAmountModified(props.name, quantity)} />\n      { productionInput }\n    </div>;\n}\n","import React, { Component } from 'react';\nimport ResourceItem from './resource-item';\n\nexport interface ResourceItemData {\n  name: string,\n  icon: string,\n  amount: number,\n  production: number,\n}\n\nexport interface ResourcesTabState {\n  resources: { [key: string]: ResourceItemData },\n  generation: number,\n}\n\nexport default class ResourcesTab extends Component<{}, ResourcesTabState> {\n  private itemsRenderer?: JSX.Element[];\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      generation: 1,\n      resources: {\n        \"TR\": { name: \"TR\", amount: 20, production: 0, icon: this.getImageUrl(\"tr\") },\n        \"M€\": { name: \"M€\", amount: 0, production: 0, icon: this.getImageUrl(\"megacredit\") },\n        \"Steel\": { name: \"Steel\", amount: 0, production: 0, icon: this.getImageUrl(\"steel\") },\n        \"Titanium\": { name: \"Titanium\", amount: 0, production: 0, icon: this.getImageUrl(\"titanium\") },\n        \"Plant\": { name: \"Plant\", amount: 0, production: 0, icon: this.getImageUrl(\"plant\") },\n        \"Energy\": { name: \"Energy\", amount: 0, production: 0, icon: this.getImageUrl(\"power\") },\n        \"Heat\": { name: \"Heat\", amount: 0, production: 0, icon: this.getImageUrl(\"heat\") },\n      }\n    }\n  }\n\n  private getImageUrl(resource: string) : string {\n    return `${process.env.PUBLIC_URL}/img/resources/${resource}.png`;\n  }\n\n  onAmountModified(name: string, quantity: number) {\n    let resources = { ... this.state.resources };\n    resources[name].amount += quantity;\n    this.setState({ resources });\n  }\n\n  onProductionModified(name: string, quantity: number) {\n    let resources = { ... this.state.resources };\n    resources[name].production += quantity;\n    this.setState({ resources });\n  }\n\n  onTriggerProductionPhase() {\n    console.log(`Production phase triggered`);\n\n    let resources = { ... this.state.resources };\n\n    // Energy becomes heat\n    resources[\"Heat\"].amount += resources[\"Energy\"].amount;\n    resources[\"Energy\"].amount = 0;\n\n    // All resources are increased by their production amount\n    Object.keys(resources).forEach(key => {\n      resources[key].amount += resources[key].production;\n    })\n\n    // MegaCredits are also increased by the TR (Terraforming Rating)\n    resources[\"M€\"].amount += resources[\"TR\"].amount;\n\n    this.setState({\n      generation: this.state.generation + 1,\n      resources\n    });\n  }\n\n  render() {\n    const itemStyle = \"col-6 col-sm-6 col-md-4\";\n\n    return <div className=\"resource-tab container\">\n      <div className=\"row no-gutters\">\n      <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"TR\"]}\n          hideProduction={true}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={() => {}} />\n      </div>\n      <div className=\"row no-gutters\">\n        <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"M€\"]}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={(name, quantity) => this.onProductionModified(name, quantity)} />\n\n        <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"Steel\"]}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={(name, quantity) => this.onProductionModified(name, quantity)} />\n\n        <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"Titanium\"]}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={(name, quantity) => this.onProductionModified(name, quantity)} />\n\n      {/* </div>\n      <div className=\"row\"> */}\n        <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"Plant\"]}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={(name, quantity) => this.onProductionModified(name, quantity)} />\n\n        <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"Energy\"]}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={(name, quantity) => this.onProductionModified(name, quantity)} />\n\n        <ResourceItem\n          className={itemStyle}\n          {...this.state.resources[\"Heat\"]}\n          onAmountModified={(name, quantity) => this.onAmountModified(name, quantity)}\n          onProductionModified={(name, quantity) => this.onProductionModified(name, quantity)} />\n      </div>\n\n      <p className=\"generation\">Generation: {this.state.generation}</p>\n      <input type=\"button\" className=\"btn btn-primary production-btn\" onClick={e => this.onTriggerProductionPhase()} value=\"Production phase\" />\n    </div>;\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport ResourcesTab from './components/resource/resources-tab';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <ResourcesTab />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}